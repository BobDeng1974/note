//
static struct sprd_pcm_dma_params vbc_pcm23_stereo_in = {
	.name = "VBC PCM23 Stereo in",
	.irq_type = BLK_DONE,
	.desc = {
		 .datawidth = SHORT_WIDTH,
		 .fragmens_len = VBC_FIFO_FRAME_NUM * 2,
		 .src_step = 0,
		 .des_step = 2,
		 },
};

vbc_drv_probe{
 //设置寄存器地址信息
- vbc_pcm_stereo_out.dev_paddr[0] = PHYS_VBDA0 + sprd_vbc_phy_base
- vbc_pcm_stereo_out.dev_paddr[1] = PHYS_VBDA1 + sprd_vbc_phy_base
- vbc_pcm_stereo_in.dev_paddr[0] = PHYS_VBAD0 + sprd_vbc_phy_base
- vbc_pcm_stereo_in.dev_paddr[1] = PHYS_VBAD1 + sprd_vbc_phy_base
- vbc_pcm23_stereo_in.dev_paddr[0] = PHYS_VBAD2 + sprd_vbc_phy_base
- vbc_pcm23_stereo_in.dev_paddr[1] = PHYS_VBAD3 + sprd_vbc_phy_base
 //设置dma信息
- arch_audio_vbc_da_dma_info 
}

//设置dma
vbc_dai_ops.hw_params-->vbc_hw_params{
- dma_data[VBC_IDX_MAX] = {//dma的设备地址
		&vbc_pcm_stereo_out,
		&vbc_pcm_stereo_in,
		&vbc_pcm23_stereo_in,
  }
- snd_soc_dai_set_dma_data{//设置播放，录制的dmadata信息
	- playback_dma_data
	- capture_dma_data
	}
}@vbc.c


//获取dma
sprd_pcm_ops.hwparams-->sprd_pcm_hw_params{
- snd_soc_dai_get_dma_data

}@sprd-pcm.c



soc/sprd/dai/vbc/r2p0/vbc.c

===============
//DMA AP_DMA_CHN_NUM	32

module_init(dma_new_init)-->dma_new_init{
- dma_reg_base  = (void __iomem *)SPRD_DMA0_BASE //寄存器基地址
- dma_chips[0],初始化chip0
- 初始化dma_chns{//总共32个chn
	- 设置chip
	- 设置基地址
	- 初始化chns_desc[i].chn_lock)
	}
}


//返回chan id 
sci_dma_request(dev_name, chn_type){//pcm  FULL_DMA_CHN
- STD_DMA_CHN/FULL_DMA_CHN,不同类型的DMA有不同的chan
- 遍历dma_chns，找到第一个可用的chan
}



sci_dma_config(chn/*id号*/,cfg_list/配置值/,node_size/*配置数，period数*/，reg_cfg_addrs){
- 
- __dma_cfg_check_and_convert(dma_chn,cfg,dma_reg_addr){
	- 检查cfg的配置值
	- 将cfg配置值写入到dma_reg_addr
	}
}

//注册dma中断处理
sci_dma_register_irqhandle(dma_chn, irq_handle ,data){
- __dma_set_int_type
- dma_chns[dma_chn].irq_handler = irq_handle
- dma_chns[dma_chn].data = data
}


//中断处理,数据接收
__dma_irq_handle(dev_id){
- dma_chip = (struct sci_dma_chip*)dev_id
- irq_status = dma_glb_reg->int_msk_sts//irq状态
- 计算dma_chn
- dma_chns[dma_chn].irq_handler
}

//释放dma
sci_dma_free(chan_id){}


//dump  CHN1 Configure Registers 
sprd_pcm_proc_dump_reg(chan_ID){
- sci_dma_dump_reg//获取地址
}@sprd-pcm.c



kernel/drivers/platform/sprd/dma_r4p0.c


//sprd
//FULL_CHN_CFG[0x8] 1111
CHN_PRIORITY[13:12]:2’b01 : Secondary lowest priority.
LLIST_CFG_VALID[8]                //这位有效时，FULL_CHN_TRSC_LEN，FULL_CHN_TRSC_STEP有效
LLIST_EN[4]:Enable the link list.
CHN_EN[0]:Enable the channel.

//FULL_CHN_INT[0xc] 112
CHN_FRAGMENT_INT_RAW_STATUS[8]:Fragment done Raw interruptstatus.
CHN_LLIST_INT_EN[4]:Link list done interrupt enable
CHN_BLK_INT_EN[1]:Block done interrupt enable

//FULL_CHN_FRAG_LEN[0x18]
REQ_MODE [25:24]:fragment模式 FRAG_REQ_MODE
SRC_SIZE:Half Word 2bytes
DEST_SIZE:Half Word 2bytes
ADDR_FIX_EN[20]:Address Fix Enable:
FRG_LEN[16:0]:framgment 320 bytes  //device的fifo的固定值

//FULL_CHN_BLK_LEN[0x1c]
BLK_LEN[16:0] :block 640 bytes  //period_bytes/channel 两个声道320frames


//FULL_CHN_TRSC_LEN[0x20] 140
TRSC_LEN 320 bytes

//FULL_CHN_TRSC_STEP[0x24]
DEST_TRSF_STEP 4 bytes
