RTL8188EU @kernel/drivers/net/wireless/rkusbwifi/rtl8188eu
RTL8189ES @kernel/drivers/net/wireless/rtl8189es

CONFIG_CFG80211=y

CFG80211配置位置：
kernel/net/wireless/Kconfig

驱动：
drivers/net/wireless

___________________________
wifi初始：

device_sdmmc1{
	.dev = {
		.platform_data = &default_sdmmc1_data,
	},
}

sdmmc设备注册：
arch_initcall(rk30_init_devices)-->rk30_init_devices-->rk30_init_sdmmc-->
platform_device_register(&device_sdmmc0/1)@device.c

驱动注册:
rk29_sdmmc_init-->platform_driver_probe(&rk29_sdmmc_driver, rk29_sdmmc_probe)-->
(匹配成功)rk29_sdmmc_probe{
- 获取平台数据，pdata = pdev->dev.platform_data;
- 获取设备资源，platform_get_resource
- io初始化，pdata->io_init-->default_sdmmc1_data.io_init-->rk29_sdmmc1_cfg_gpio(主要是IO复用的设置)
}@rk29_sdmmc.c

___________________________
wifi电源控制：
CONFIG_WIFI_CONTROL_FUNC

devices={
....
&rk29sdk_wifi_device
...
}

machine_rk30_board_init-->platform_add_devices(devices, ARRAY_SIZE(devices))@board-rkpx3-sdk.c
-->注册设备rk29sdk_wifi_device@rk-sdmmc-wifi.c

GPIO控制脚：
rk_platform_wifi_gpio(io脚配置)@rk-sdmmc-wifi.c
RK30SDK_WIFI_GPIO_POWER_N@kernel/arch/arm/mach-rk30/board-rk3168-tb-sdmmc-conifg.c

wifi使用的gpio初始化：(供电脚，复位脚)#include "rk-sdmmc-wifi.c"@board-rkpx3-sdk.c
machine_rk30_board_init-->rk29sdk_wifi_bt_gpio_control_init@rk-sdmmc-wifi.c

驱动：
各模块的驱动中实现。/drivers/net/wireless/rkusbwifi/rtl8188eu/os_dep/linux/rtw_android.c


打开供电：
rk29sdk_wifi_power@rk-sdmmc-wifi.c


kernel/arch/arm/mach-rk30/devices.c
kernel/arch/arm/plat-rk/rk-sdmmc-wifi.c
kernel/arch/arm/mach-rkpx3/board-rkpx3-sdk.c
kernel/drivers/mmc/host/rk29_sdmmc.c
============================

reg_todo-->reg_process_pending_hints-->reg_process_hint-->__regulatory_hint-->call_crda

kernel/net/wireless/reg.c


############################
gocsdk /dev/ttyS0 921600
echo "AT-CZ10010\r\n" >> /dev/goc_serial //拨号


bluetooth:
device_rfkill_rk = {
    .name   = "rfkill_rk",
    .dev    = {
        .platform_data = &rfkill_rk_platdata,
    },
}

设备：
machine_rk30_board_init-->platform_add_devices-->devices-->device_rfkill_rk@board-rkpx3-sdk.c

驱动：
rfkill_rk_init-->platform_driver_register(&rfkill_rk_driver)--rfkill_rk_driver = {
	.probe = rfkill_rk_probe,
	.driver = {
		.name = "rfkill_rk",
		.pm = &rfkill_rk_pm_ops,
	},
}rfkill-rk.c

rfkill_rk_probe{
- ..
- rfkill->rfkill_dev = rfkill_alloc(,&rfkill_rk_ops,)
}


rfkill_set_block-->rfkill->ops->set_block@core.c-->rfkill_rk_set_power@rkkill-rk.c


rfkill_sync_work

rfkill_switch_all-->__rfkill_switch_all

kernel/arch/arm/mach-rkpx3/board-rkpx3-sdk.c
kernel/net/rfkill/rfkill-rk.c
kernel/net/rfkill/core.c

############################
GPS:

struct rk_gps_data rk_gps_info ={} //gps信息

gps设备：
struct platform_device rk_device_gps = {
	.name = "gps_hv5820b",
	.dev		= {
	.platform_data = &rk_gps_info,
		}
};

gps驱动：
insmod /system/lib/modules/gps_rk30xx.ko.3.0.36+
@init.rk30board.rc


kernel/drivers/misc/gps
kernel/arch/arm/mach-rkpx3/board-rkpx3-sdk.c

