//
dai_link(接口信息)将codec_dai(关联到codec的驱动),cpu_dai(驱动)关联起来。

codec和dai基本同时注册（同一个dev上的codec和dai）










//==============注册codec驱动
//创建codec 并加入链表。并注册dai
snd_soc_register_codec(){
- 创建snd_soc_codec *codec
- 加入到链表，list_add(&codec->list, &codec_list) 
- snd_soc_register_dais(snd_soc_dai_driver dai_drv){
	- 创建snd_soc_dai *dai。设置驱动为当前注册的驱动dai_drv
	- 查找codec_list中匹配的codec,初始dai->codec
	- list_add(&dai->list, &dai_list);
	}
}@soc-core.c

//创建cmpnt 并加入链表
snd_soc_register_component{
- 创建snd_soc_component *cmpnt
- list_add(&cmpnt->list, &component_list)
  //创建dai 加入链表
- snd_soc_register_dais(snd_soc_dai_driver dai_drv){
	- 创建snd_soc_dai *dai。设置驱动为当前注册的驱动dai_drv
	- 将dai->codec赋值为对应的codec
	- list_add(&dai->list, &dai_list);
	}
}@soc-core.c

//platfrom
snd_soc_register_platform-->snd_soc_add_platform-->list_add(&platform->list, &platform_list)


//============注册soc驱动
audio_card_init{
- 创建，platform_device_alloc("soc-audio", -1)
- 设置设备数据(用于注册声卡设备)，platform_set_drvdata(snd_soc_card)
- 注册，platform_device_add
}

//driver
snd_soc_init{
- 
- platform_driver_register(&soc_driver) //soc_driver.driver.name= "soc-audio"
}@soc-core.c

soc_probe{
- 获取声卡数据，snd_soc_card=platform_get_drvdata
- 注册声卡，snd_soc_register_card{
	- 初始化链表，snd_soc_initialize_card_lists
	- 加入到链表，list_add(&card->list, &card_list)
	- card->rtd = devm_kzalloc //创建rtd
	- 设置rtd的dai_link，为codec的dai_link
	- 初始化soc_card，snd_soc_instantiate_cards-->snd_soc_instantiate_card
	}
}

//初始化所有soc_card,rtd（rtd个数和dai_link一致）
snd_soc_instantiate_cards(遍历所有card)-->snd_soc_instantiate_card{
//将dai_link，和codec_dai,cpu_dai关联起来，保存到rtd->cpu_dai和rtd->codec_dai
- soc_bind_dai_link{
	- 初始化snd_soc_pcm_runtime rtd
	  //dai_list中有和dai_link匹配，加入rtd.cpu_dai
	- 遍历list_for_each_entry(dai_list){
		- 找到并设置cpu_dai,rtd->cpu_dai		
	  }
	  //codec_list中和dail_link设置rtd.codec   dai_list有和dai_link匹配项，加入rtd.codec_dai
	- 遍历list_for_each_entry(codec_list){
		- 找到并设置codec，rtd->codec = codec;
		- 查找dai_list，设置rtd->codec_dai 
		}
	  //关联到平台数据
	- 遍历list_for_each_entry(platform_list),设置rtd->platform  
	}
- 创建card，snd_card_create{
	- 创建ctl设备，snd_ctl_create@control.c
	- snd_info_card_create
	}@init.c

//创建接口
- 初始dai，soc_probe_link_components{
	//probe cpudai中的codec
	- soc_probe_codec(card, cpu_dai->codec){
		- 设置codec->card的为card
		- codec驱动中dapm_widgets不为空，snd_soc_dapm_new_controls
		- 为dai_list中匹配项创建snd_soc_dapm_new_dai_widgets
		- 加入到list_add(card->codec_dev_list)
		}
	//probe codecdai中的codec
	- soc_probe_codec(card, codec_dai->codec){
		- snd_soc_add_controls 
		- 加入到list_add(card->codec_dev_list)
		}
	- soc_probe_platform
	}
//根据card.dai_link创建pcm
- soc_probe_link_dais{
	- cpu_dai{
		- 若不带codec则创建，snd_soc_dapm_new_dai_widgets//rtd中cpu_dai
		- cpu_dai->driver->probe
		- list_add(card->dai_dev_list)
		}
	- codec_dai{
		- cpu_dai->driver->probe
		- list_add(card->dai_dev_list)
		}		
	- dai_link不带params创建pcm。soc_new_pcm
	- 否则关联dai widget
	}
//
- snd_soc_add_card_controls{

	}
//注册声卡snd_card,创建pcm文件节点
- 创建声卡，snd_card_create(&card->snd_card){
	- 创建snd_card，分配编号
	- 
	}
- snd_card_register(&card->snd_card){
	- 创建card0/1，device_create(sound_class)
	  //创建pcm节点
	- 注册声卡上的设备，snd_device_register_all(遍历card->devices){
		- 遍历card->devices
		- dev->ops->dev_register-->snd_pcm_dev_register@pcm.c-->
			snd_register_device_for_dev(创建文件节点)-->device_create@sound.c
		}
	}@device.c
}@soc-core.c



//=============
//ctl设备
snd_ctl_create-->snd_ctl_dev_register@control.c


//pcm设备
soc_new_pcm(rtd,num){
- snd_pcm_new-->_snd_pcm_new{
	- 设置snd_device_ops //注册创建pcm文件节点接口
	- 创建pcm
	- snd_pcm_new_stream //创建stream(录制，播放)
	- snd_device_new{
		- 创建snd_device
		- 加入到list_add(&card->devices)
		}@device.c
	}@pcm.c
- rtd->pcm = pcm //设置rtd (runtime data)
- rtd //初始化rtd
}@soc-pcm.c

//创建pcm节点。注册声卡时调用
snd_device_register/snd_device_register_all-->ops.dev_register-->snd_device_ops.dev_register
@device.c-->snd_pcm_dev_register{
- 
- 创建名字pcmC%iD%ip（card->number,device）
- snd_register_device_for_dev(snd_pcm_f_ops,pcm){
	- 设置操作函数f_ops，snd_pcm_f_ops
	- device_create@sound.c
	- 
	}
- 
}@pcm.c

sound/soc/soc-core.c
sound/core/init.c
sound/core/control.c
sound/core/info.c
sound/core/device.c
sound/core/pcm.c
//============ dapm ALSA SoC Dynamic Audio Power Management
