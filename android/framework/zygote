JNI
registerSystemNatives-->loadJniLibrary("javacore")@init.cpp-->dvmLoadNativeCode-->dlsym@Native.cpp

___________________________
加载"libandroid_servers.so":包含服务的jni，其他应用不能调用
main-->System.loadLibrary("android_servers")@SystemServer.java-->loadLibrary@System.java-->
loadLibrary-->nativeLoad@Runtime.java-->nativeLoad@InternalNative.cpp-->dvm_java_lang_Runtime-->
Dalvik_java_lang_Runtime_nativeLoad@java_lang_Runtime.cpp-->dvmLoadNativeCode-->dlsym@Native.cpp

加载"android_runtime.so":运行时的jni,所有程序可用
startReg-->register_jni_procs-->array[i].mProc(env)@AndroidRuntime.cpp-->register_android_xxxxx(env)-->
registerNativeMethods@AndroidRuntime.cpp-->jniRegisterNativeMethods@JNIHelp.cpp


dalvik/vm/Native.cpp
libnativehelper/JNIHelp.cpp

frameworks/base/services/jni/Android.mk
frameworks/base/core/jni/AndroidRuntime.cpp
================================================
zygote开始:
service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
    class core
    socket zygote stream 660 root system
    onrestart write /sys/android_power/request_state wake
    onrestart write /sys/power/state on
    onrestart restart media
    onrestart restart netd

app_process编译时链接的库包含libandroid_runtime.so，

service zygote /system/bin/app_proces@init.rc-->main-->runtime.start("com.android.internal.os.ZygoteInit")
@app_main.cpp-->AndroidRuntime::start(开始虚拟机，注册函数)@AndroidRuntime.cpp-->main-->startSystemServer
-->(子进程中)handleSystemServerProcess@ZygoteInit.java


父进程中(监听zygote socket产生新进程)：
startSystemServer(return)@ZygoteInit.java


//SystemServer进程开始
(fork后子进程中)handleSystemServerProcess-->--RuntimeInit.zygoteInit{
- commonInit
- nativeZygoteInit
- applicationInit(com.android.server.SystemServer)-->invokeStaticMain@ZygoteInit.java
	-->main@SystemServer.java
}@RuntimeInit.java

打开socket发送消息：
startViaZygote-->zygoteSendArgsAndGetResult-->openZygoteSocketIfNeeded

frameworks/base/cmds/app_process/app_main.cpp
frameworks/base/core/jni/AndroidRuntime.cpp
frameworks/base/core/java/com/android/internal/os/ZygoteInit.java 
frameworks/base/core/java/com/android/internal/os/RuntimeInit.java

________________________________________________
开始应用进程：
startProcessLocked-->Process.start("android.app.ActivityThread")@ActivityManagerService.java-->
start-->startViaZygote-->zygoteSendArgsAndGetResult-->sZygoteWriter.flush--ProcessStartResult--
ZygoteInputStream.readInt(读取执行结果)@Process.java-->



=================================
android环境：
c库实现：
bionic


java实现：
libcore/luni

