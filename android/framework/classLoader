//6.0
createOrUpdateClassLoaderLocked(null){
- makePaths
- getClassLoader-->new PathClassLoader(path zip)@ApplicationLoaders.java
}@LoadedApk.java

//
public DexClassLoader (String dexPath, String optimizedDirectory, String libraryPath, ClassLoader parent)
- dexPath 需要装载的APK或者Jar文件的路径。包含多个路径用File.pathSeparator间隔开,在Android上默认是 “:”
- optimizedDirectory 优化后的dex文件存放目录，不能为null
- libraryPath 目标类中使用的C/C++库so文件的路径,每个目录用File.pathSeparator间隔开; 可以为null
- parent 该类装载器的父装载器，一般用当前执行类的装载器

frameworks/base/core/java/android/app/LoadedApk.java
frameworks/base/core/java/android/app/ApplicationLoaders.java

//==========android5.1
handleBindApplication@ActivityThread.java-->makeApplication-->getClassLoader
-->ApplicationLoaders.getDefault().getClassLoader@LoadedApk.java-->
getClassLoader{
- ClassLoader.getSystemClassLoader().getParent //获取父loader
- new PathClassLoader(zip, libPath, parent)-->
}@ApplicationLoaders.java


frameworks/base/core/java/android/app/LoadedApk.java
frameworks/base/core/java/android/app/ApplicationLoaders.java

//=============
/system/app/KeyChain/KeyChain.apk
at dalvik.system.DexFile.openDexFileNative(Native Method)

at dalvik.system.DexFile.openDexFile(DexFile.java:295)

at dalvik.system.DexFile.<init>(DexFile.java:80)

at dalvik.system.DexFile.<init>(DexFile.java:59)

at dalvik.system.DexPathList.loadDexFile(DexPathList.java:279)

at dalvik.system.DexPathList.makePathElements(DexPathList.java:248)

at dalvik.system.DexPathList.<init>(DexPathList.java:120)

at dalvik.system.BaseDexClassLoader.<init>(BaseDexClassLoader.java:48)

at dalvik.system.PathClassLoader.<init>(PathClassLoader.java:65)

at android.app.ApplicationLoaders.getClassLoader(ApplicationLoaders.java:58)

at android.app.LoadedApk.getClassLoader(LoadedApk.java:376)

at android.app.LoadedApk.makeApplication(LoadedApk.java:568)

at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4680)

at android.app.ActivityThread.-wrap1(ActivityThread.java)

at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1405)
