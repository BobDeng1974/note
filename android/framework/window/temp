//
performLayoutAndPlaceSurfacesLockedInner{
- 布局设置窗口大小
- 遍历所有窗口windows{
	- 提交绘制commitFinishDrawingLocked-->performShowLocked
		-->mService.scheduleAnimationLocked(开始动画)
	- 
	}

//设置动画
- 准备好执行应用切换mAppTransition.isReady，handleAppTransitionReadyLocked-->
	setTokenVisibilityLocked{
	- 
	}
}



//应用窗口绘制完成，通知windowManagerService
performDraw@ViewRootImpl.java-->finishDrawing@Session.java--finishDrawingWindow{
- finishDrawingLocked(窗口已经绘制完成，设置状态COMMIT_DRAW_PENDING)@WindowStateAnimator.java
- requestTraversalLocked,执行布局，显示 
}@WindowManagerService.java




//执行动画
scheduleAnimationLocked-->(收到display事件)mAnimationRunnable.run-->animateLocked{
- updateAppWindowsLocked{//执行应用动画
	- appAnimator.stepAnimationLocked
	}
- screenRotationAnimation，窗口旋转动画

- updateWindowsLocked{   //设置窗口动画
	- winAnimator.stepAnimationLocked
	}
}@WindowAnimator.java


===================
//设置旋转动画
setScreenRotationAnimationLocked

startFreezingScreenLocked@AcivityRecord.java-->
startAppFreezingScreen-->startAppFreezingScreenLocked-->startFreezingDisplayLocked

stopFreezingScreenLocked@ActivityRecord.java-->
stopAppFreezingScreen-->unsetAppFreezingScreenLocked-->stopFreezingDisplayLocked



activityIdleInternalLocked-->
ensureActivitiesVisibleLocked@ActivityStackSupervisor.java-->ensureActivitiesVisibleLocked
-->ensureActivityConfigurationLocked@ActivityStack.java






