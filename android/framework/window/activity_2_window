//android 4.4 display service
onStart-->publishBinderService(Context.DISPLAY_SERVICE)@DisplayManagerService.java


//manager
DisplayManager-->DisplayManagerGlobal.getInstance@DisplayManager.java-->
getInstance{
- IBinder b = ServiceManager.getService(Context.DISPLAY_SERVICE)
- new DisplayManagerGlobal(b)
}



getDisplay-->getOrCreateDisplayLocked@DisplayManager.java-->getCompatibleDisplay-->
new Display(/*屏信息*/getDisplayInfo())@DisplayManagerGlobal.java-->mDm.getDisplayInfo
-->getDisplayInfo-->getDisplayInfoInternal@DisplayManagerService.java


updateConfiguration@ActivityManagerService.java-->
computeNewConfigurationLocked@WindowManagerService.java-->
computeScreenConfiguration{

}@DisplayContent.java

frameworks/base/core/java/android/hardware/display/DisplayManager.java
frameworks/base/core/java/android/hardware/display/DisplayManagerGlobal.java
frameworks/base/services/java/com/android/server/display/DisplayManagerService.java
frameworks/base/services/core/java/com/android/server/wm/DisplayContent.java
=====================
createStack@WindowManagerService.java-->
createStack(/*activityStack的id号*/，/*依靠栈id*/){
- 创建在依靠栈之上{
	- 创建栈容器，StackBox
	- 创建栈任务，TaskStack
	}
- 分割依靠栈，box.split{
	- 若分割栈id不是当前栈则返回
	- 创建新任务栈，TaskStack
	- 创建栈容器，StackBox
	}
}@DisplayContent.java


performLayoutLockedInner@WindowManagerService-->(mPolicy.getContentRectLw,获取大小)setStackBoxSize
-->mStackBoxes.get(stackBoxNdx).setStackBoxSizes@DisplayContent.java-->
setStackBoxSizes{
- 没有多个栈，mStack不为空。设置大小mBounds.set,设置栈大小
	setBounds{
	- 
	}@TaskStack.java
- 有多个栈，根据水平或是垂直平分{
	- 设置mSecond大小
	- 设置mFirst大小
	}
}@StackBox.java


frameworks/base/services/java/com/android/server/wm/DisplayContent.java
frameworks/base/services/java/com/android/server/wm/TaskStack.java
frameworks/base/services/java/com/android/server/wm/StackBox.java
frameworks/base/services/java/com/android/server/accessibility/ScreenMagnifier.java
frameworks/base/services/java/com/android/server/wm/WindowManagerService.java

//===================
//android5.1
createStackOnDisplay-->ActivityContainer.attachToDisplayLocked-->mWindowManager.attachStack@ActivityStackSupervisor.java
-->attachStack{
- new TaskStack //创建对应activityService stackId的window端stack
- stack.attachDisplayContent(displayContent)-->updateDisplayInfo(设置栈的大小为display)@TaskStack.java
- displayContent.attachStack
}WindowManagerService.java


//设置displayContent大小(栈大小)
performLayoutLockedInner-->displayContent.resize(mPolicy.getContentRectLw)@WindowManagerService.java
-->mContentRect.set@DisplayContent.java




moveTaskToStackLocked@ActivityStackSupervisor.java-->mWindowManager.addTask-->addTask
@WindowManagerService.java


removeTask@ActvityStack.java-->mWindowManager.removeTask-->removeTask@WindowManagerService.java

//重新设置栈
resizeStack-->setBounds



//虚拟显示？
createVirtualDisplay



