//启动activity设置bundle可定义启动，退出动画
ActivityOptions{
- makeCustomAnimation(Context context, int enterResId, int exitResId)
- makeScaleUpAnimation (View source, int startX, int startY, int startWidth, int startHeight)
}

//启动
Context.startActivity(Intent, Bundle/*ActivityOptions*/)-->startActivityMayWait(options)
-->startActivityLocked(options)-->startActivityUncheckedLocked(options)@ActivityStackSupervisor.java
-->startActivityLocked(options)-->mStackSupervisor.resumeTopActivitiesLocked@ActivityStack.java
-->resumeTopActivityLocked@ActivityStackSupervisor.java-->resumeTopActivityLocked(option)-->
resumeTopActivityInnerLocked@ActvitiyStack.java-->startSpecificActivityLocked{
- 进程已经启动，realStartActivityLocked-->scheduleLaunchActivity
- 进程没有启动，mService.startProcessLocked
}@ActivitStackSupervisor.java

//设置动画
resumeTopActivityLocked{
- 前一个应用不为空：
	finishing{
	- prepareAppTransition(prev.task == next.task? AppTransition.TRANSIT_ACTIVITY_CLOSE
                            : AppTransition.TRANSIT_TASK_CLOSE)
	}否则{
	- prepareAppTransition(prev.task == next.task? AppTransition.TRANSIT_ACTIVITY_OPEN
                            : AppTransition.TRANSIT_TASK_OPEN)
	}
- 前一个应用为空：
	prepareAppTransition(AppTransition.TRANSIT_ACTIVITY_OPEN)
	
- applyOptionsLocked-->service.mWindowManager.overridePendingAppTransition //使用自定义动画
}

startActivityLocked{
- prepareAppTransition(newTask? AppTransition.TRANSIT_TASK_OPEN
                        : AppTransition.TRANSIT_ACTIVITY_OPEN)
}


//结束的应用为mResumedActivity
finishActivityLocked{
- prepareAppTransition(endTask? AppTransition.TRANSIT_TASK_CLOSE
                    : AppTransition.TRANSIT_ACTIVITY_CLOSE)
}

updateTransitLocked-->prepareAppTransition


moveTaskToFrontLocked{
- updateTransitLocked(AppTransition.TRANSIT_TASK_TO_FRONT)
- 
}

moveTaskToBackLocked{
- prepareAppTransition(AppTransition.TRANSIT_TASK_TO_BACK)
}
