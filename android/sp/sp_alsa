//soc dts配置

sprd平台又4card，"saudio_lte" "saudio_voip" "all-i2s" "sprdphone"(多媒体使用) 
===================
//注册声卡saudiolte和saudiovoip
saudio_lte{
	compatible = "sprd,saudio";
};
saudio_voip{
	compatible = "sprd,saudio";
}@sprd-sharkl-modem-volte.dtsi
//sprd sound
module_init()-->alsa_card_saudio_init-->platform_driver_register(&snd_saudio_driver)
-->snd_saudio_driver.driver.name("saudio")@saudio.c

snd_saudio_probe-->saudio_ctrl_thread-->saudio_snd_init_card-->snd_card_register@saudio.c

kernel/sound/drivers/saudio.c

______________
//注册声卡all_i2s_card    i2s-null-codec
i2s_sound: sound@2 {
compatible = "sprd,i2s-null-codec";
sprd,model = "all-i2s";
};

late_initcall_sync(sprd_asoc_i2s_init)-->sprd_asoc_i2s_probe-->snd_soc_register_card(all_i2s_card)
@i2s-r0p0-null-codec.c

_____________
//注册声卡 vbc_r2p0_codec_card
static struct snd_soc_card vbc_r2p0_codec_card = {
	.name = "sprdphone",
	.dai_link = vbc_r2p0_codec_dai,       //pcm 
	.controls = vbc_r2p0_codec_controls,  //control
	.dapm_widgets = sprd_codec_dapm_widgets,
	.dapm_routes = vbc_r2p0_codec_map,0
}

//soc设备注册
vbc_sound0: sound@0 {
            compatible = "sprd,vbc-r2p0-sprd-codec";
}@kernel/arch/arm/boot/dts/sprd-sound.dtsi

late_initcall_sync(vbc_r2p0_codec_init)-->vbc_r2p0_codec_driver()-->vbc_r2p0_codec_probe
(/*card设备*/vbc_r2p0_codec_card)@vbc-r2p0-sprd-codec-v4.h-->
sprd_asoc_probe(vbc_r2p0_codec_card){
- 设置dai_link{
	- card->dai_link[i].platform_of_node = pcm_node
	- card->dai_link[i].codec_of_node = codec_node
	}
- snd_soc_register_card(vbc_r2p0_codec_card)
}@sprd-asoc-card.c

//dai link
vbc_r2p0_codec_dai{
	{
	 .name = "vbc(r2)-codec(v4)-ap",
	 .stream_name = "HiFi",

	 .codec_name = "sprd-codec",
	 .platform_name = "sprd-pcm-audio",
	 .cpu_dai_name = "vbc-r2p0",
	 .codec_dai_name = "sprd-codec-i2s",
	 .ignore_suspend = 1,
	 },

	{
	 .name = "aux-captrue",
	 .stream_name = "AuxRecord",

	 .codec_name = "sprd-codec",
	 .platform_name = "sprd-pcm-audio",
	 .cpu_dai_name = "vbc-r2p0-ad23",
	 .codec_dai_name = "codec-i2s-ext",
	 .ignore_suspend = 1,
	 },

	{
	 .name = "vbc(r2)-dfm",
	 .stream_name = "Dfm",

	 .codec_name = "sprd-codec",
	 .platform_name = "sprd-pcm-audio",
	 .cpu_dai_name = "vbc-dfm",
	 .codec_dai_name = "sprd-codec-fm",
	 .ops = &dfm_ops,
	 .ignore_suspend = 1,
	 },
}@vbc-r2p0-sprd-codec-v4.h


kernel/sound/soc/sprd/vbc-r2p0-sprd-codec-v4.h
kernel/sound/soc/sprd/sprd-asoc-card.c


//==============
//platform
sprd_pcm: sprd-pcm-audio {
	compatible = "sprd,sprd-pcm";
};

//pcm 的操作，dma函数  platform
platform_driver_register(&sprd_pcm_driver"sprd-pcm")-->sprd_soc_platform_probe
-->snd_soc_register_platform(sprd_soc_platform)@sprd-pcm.c

______________
//codec模块。和dai接口

snd_soc_dai_driver sprd_codec_dai{
	{
	 .name = "sprd-codec-i2s",
	 .playback = {
		      .stream_name = "Playback",
		      .channels_min = 1,
		      .channels_max = 2,
		      .rates = SPRD_CODEC_PCM_RATES,
		      .formats = SNDRV_PCM_FMTBIT_S16_LE,
		      },
	 .capture = {
		     .stream_name = "Main-Capture",
		     .channels_min = 1,
		     .channels_max = 2,
		     .rates = SPRD_CODEC_PCM_AD_RATES,
		     .formats = SNDRV_PCM_FMTBIT_S16_LE,
		     },
	 .ops = &sprd_codec_dai_ops,
	 },

	/*digital  ad1 */
	{
	 .id = SPRD_CODEC_IIS1_ID,
	 .name = "codec-i2s-ext",
	 .capture = {
		     .stream_name = "Ext-Capture",
		     .channels_min = 1,
		     .channels_max = 2,
		     .rates = SPRD_CODEC_PCM_AD_RATES,
		     .formats = SNDRV_PCM_FMTBIT_S16_LE,
		     },
	 .ops = &sprd_codec_dai_ops,
	 },

	{
	 .name = "sprd-codec-fm",
	 .playback = {
		      .stream_name = "DFM-Output",
		      .channels_min = 1,
		      .channels_max = 2,
		      .rates = SPRD_CODEC_PCM_RATES,
		      .formats = SNDRV_PCM_FMTBIT_S16_LE,
		      },
	 .ops = &sprd_codec_dai_ops,
	 },
}@sprd-codec.c


//驱动 设备
&sprd_codec {
	status = "okay";
}

sprd_codec_codec_driver(sprd_codec_codec_driver"sprd-codec")-->
sprd_codec_probe{
- request_irq
- snd_soc_register_codec(soc_codec_dev_sprd_codec,sprd_codec_dai)-->
	snd_soc_register_dais{
	
	}
}@sprd-codec.c




sprd_pcm_mmap{
- pgprot_writecombine
- remap_pfn_range
}

//irq
sci_dma_register_irqhandle(sprd_pcm_dma_irq_ch)@sprd-pcm.c-->snd_pcm_period_elapsed
snd_pcm_update_hw_ptr0-->substream->ops->pointer@pcm_lib.c
______________
//vbc模块

//cpu dai driver
snd_soc_dai_driver vbc_dai{
	{
	 .name = "vbc-r2p0",
	 .id = 0,
	 .playback = {
		      .channels_min = 1,
		      .channels_max = 2,
		      .rates = SNDRV_PCM_RATE_CONTINUOUS,
		      .rate_max = 96000,
		      .formats = SNDRV_PCM_FMTBIT_S16_LE,
		      },
	 .capture = {
		     .channels_min = 1,
		     .channels_max = 2,	/* AD01 */
		     .rates = SNDRV_PCM_RATE_CONTINUOUS,
		     .rate_max = 96000,
		     .formats = SNDRV_PCM_FMTBIT_S16_LE,
		     },
	 .ops = &vbc_dai_ops,
	 },
	{
	 .name = "vbc-r2p0-ad23",
	 .id = 1,
	 .capture = {
		     .channels_min = 1,
		     .channels_max = 2,	/* AD23 */
		     .rates = SNDRV_PCM_RATE_CONTINUOUS,
		     .rate_max = 96000,
		     .formats = SNDRV_PCM_FMTBIT_S16_LE,
		     },
	 .ops = &vbc_dai_ops,
	 },
	{
	 .name = "vbc-dfm",
	 .id = DFM_MAGIC_ID,
	 .playback = {
		      .channels_min = 1,
		      .channels_max = 2,
		      .rates = SNDRV_PCM_RATE_CONTINUOUS,
		      .rate_max = 48000,
		      .formats = SNDRV_PCM_FMTBIT_S16_LE,
		      },
	 .ops = &dfm_dai_ops,
	 }
}@vbc.c

//驱动 设备
&vbc_r2p0 {
	status = "okay";
};

platform_driver_register(&vbc_driver"vbc-r2p0")-->vbc_drv_probe{
- sprd_vbc_codec_probe{
	- snd_soc_register_codec(&soc_codec_dev_vbc_codec)
	}@vbc-codec.c
- snd_soc_register_component(&sprd_vbc_component,vbc_dai)
}@vbc.c
______________
//vaudio driver
vaudio: vaudio {
	compatible = "sprd,vaudio";
};

module_platform_driver(sprd_vaudio_driver)-->sprd_vaudio_drv_probe-->
snd_soc_register_component(sprd_vaudio_dai)@vaudio.c
______________
//i2s driver
&i2s 1/2/3/4 {
	status = "okay";
};

module_platform_driver(i2s_driver)-->i2s_drv_probe-->snd_soc_register_component
(&sprd_i2s_component,i2s->i2s_dai_driver)@i2s.c


snd_soc_register_component(&sprd_compr_component,sprd_compr_dai)


______________
//i2s-null-codec
null_codec: null-codec {
compatible = "sprd,null-codec";
};

module_platform_driver(null_codec_codec_driver"null-codec")-->null_codec_codec_probe-->
snd_soc_register_codec(&soc_codec_dev_null_codec，null_codec_dai)@null-codec.c

______________
//widget
soc_codec_dev_sprd_codec{
- sprd_codec_dapm_widgets //widget
- sprd_codec_intercon
- sprd_codec_snd_controls
}@sprd-codec.c


=====================
//dma
sprd_pcm_new-->sprd_pcm_preallocate_dma_buffer{
- struct snd_dma_buffer *buf = &substream->dma_buffer
- 设置buf
- dma_alloc_coherent
}


sprd_pcm_ops.mmap-->sprd_pcm_mmap{
- 
}@sprd-pcm.c




kernel/sound/soc/sprd/dai/vbc/r2p0/vbc.c
kernel/sound/soc/sprd/codec/sprd/v4/sprd-codec.c
kernel/sound/soc/sprd/dai/vbc/r2p0/vbc-codec.c
kernel/sound/soc/sprd/dai/sprd-pcm.c
kernel/sound/soc/sprd/dai/vaudio/vaudio.c
kernel/sound/soc/sprd/dai/i2s/i2s.c
kernel/sound/soc/sprd/codec/null-codec/null-codec.c
kernel/sound/soc/sprd/i2s-r0p0-null-codec.c
kernel/sound/soc/sprd/dai/sprd-dmaengine-pcm.c
