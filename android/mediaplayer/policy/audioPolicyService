//通过HAL层进行操作
/*audioPolicyService创建audioPolicyManager

选择打开的output，input设备

*/


AudioPolicyService::AudioPolicyService{
- 创建线程，AudioCommandThread
- 老方法{
   - audio模块，hw_get_module(AUDIO_POLICY_HARDWARE_MODULE_ID)
   - 打开设备，audio_policy_dev_open(module, &mpAudioPolicyDev)-->module->methods->open@audio_policy.h
   }
- 新方法{
   - AudioPolicyClient //实现AudioPolicyClientImpl,对audioflinger的一个封装
   - createAudioPolicyManager-->AudioPolicyManager(AudioPolicyClient)	
   }

}

AudioPolicyManager{
- 创建默认输出设备，mDefaultOutputDevice
- 解析配置文件，loadAudioPolicyConfig("audio_policy.conf"){
	- 解析hw(primary,a2dp)，input，output	
	}
- mEngine->initializeVolumeCurves //初始化音量
- 初始化mHwModules{
	- mpClientInterface->loadHwModule(name)--> //加载hw库
	  AudioPolicyService::AudioPolicyClient::loadHwModule-->af->loadHwModule(name)
	- 
	}
- 初始化mAvailableOutputDevices{

	}
- 初始化mAvailableInputDevices{

	}
}	


//audioService接口实现
AudioPolicyService::{
- setDeviceConnectionState
- createAudioPatch
}AudioPolicyInterfaceImpl.cpp


frameworks/av/services/audiopolicy/service/AudioPolicyInterfaceImpl.cpp
frameworks/av/services/audioflinger/AudioPolicyService.cpp
//AudioPolicyService通过audio_policy_hal进行操作

//加载模块
aps_load_hw_module-->af->loadHwModule

=================
//output
获取output：
AudioPolicyService::getOutput-->mpAudioPolicy->get_output@AudioPolicyService.cpp
-->lap->policy.get_output@audio_policy_hal.cpp

回调getOutput：
getOutput-->(HAL)aps_ops.open_output_on_module-->aps_open_output_on_module-->af->openOutput
@AudioPolicyService.cpp

开始output：
AudioSystem::startOutput-->AudioPolicyService::startOutput-->mpAudioPolicy->start_output-->
ap_start_output@audio_policy_hal.cpp

回调设置参数：
setParameters-->mAudioCommandThread->parametersCommand-->threadLoop-->
AudioSystem::setParameters@AudioPolicyService.cpp-->af->setParameters@AudioSystem.cpp-->



//设置音量
setStreamVolumeIndex@audioSystem.cpp-->setStreamVolumeIndex{
- 有该函数则调用，mpAudioPolicy->set_stream_volume_index_for_device
	-->ap_set_stream_volume_index_for_device@
- 否则调用，set_stream_volume_index
}

//根据流获取设备
getDevicesForStream-->mpAudioPolicy->get_devices_for_stream@AudioPolicyService.cpp
-->get_devices_for_stream-->ap_get_devices_for_stream@audio_policy_hal.cpp



set_stream_volume-->aps_set_stream_volume-->setStreamVolume-->mAudioCommandThread->volumeCommand-->
AudioCommandThread::volumeCommand-->(执行命令)AudioCommandThread::threadLoop-->AudioSystem::setStreamVolume
@AudioPolicyService.cpp

=================
//input 


frameworks/av/services/audioflinger/AudioPolicyService.cpp
hardware/rk29/audio/audio_policy_hal.cpp




