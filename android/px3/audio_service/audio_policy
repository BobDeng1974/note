AudioPolicyService::instantiate-->publish-->addService(new SERVICE)@BinderService.h
-->AudioPolicyService{
- 创建各个命令进程，AudioCommandThread
- 获取模块，hw_get_module(AUDIO_POLICY_HARDWARE_MODULE_ID)
- 获取设备mpAudioPolicyDev，audio_policy_dev_open
- 创建policy，create_audio_policy(设置policy，设置操作函数)
- 初始化policy，init_check@AudioPolicyService.cpp-->ap_init_check@audio_policy_hal.cpp
- 加载配置，loadPreProcessorConfig
}@AudioPolicyService.cpp


frameworks/native/include/binder/BinderService.h
frameworks/av/services/audioflinger/AudioPolicyService.cpp
========================
struct legacy_ap_module HAL_MODULE_INFO_SYM = {
    module: {
        common: { 
            methods: &legacy_ap_module_methods,
        },
    }

legacy_ap_module_methods->open-->legacy_ap_dev_open{
- 创建设备，legacy_ap_device
- 初始化设备，{
	- 设置接口创建audioPolicy，create_legacy_ap{
		- 创建lap->service_client = AudioPolicyCompatClient(AudioPolicyService)
		- 创建lap->apm = createAudioPolicyManager(lap->service_client)
		- 设置audio_policy
		}
	- 设置接口销毁audioPolicy，destroy_legacy_ap
	}
}

hardware/rk29/audio/audio_policy_hal.cpp
===================
AudioPolicyCompatClient:

AudioPolicyCompatClient::openOutput-->mServiceOps->open_output_on_module
@AudioPolicyCompatClient.cpp-->audio_policy_service_ops.open_output_on_module
-->aps_open_output_on_module@AudioPolicyService.cpp


hardware/rk29/audio/AudioPolicyCompatClient.cpp
===================
AudioPolicyManagerDefault extends AudioPolicyManagerBase{
- 
- 打开可用的输出设备{
	-  mpClientInterface->loadHwModule
	}
}


//解析配置：首先"/vendor/etc/audio_policy.conf"，若没有再"/system/etc/audio_policy.conf" 
AudioPolicyManagerBase::loadAudioPolicyConfig()-->loadGlobalConfig{
- 解析连接的输出设备ATTACHED_OUTPUT_DEVICES_TAG，mAttachedOutputDevices 
- 解析默认设备DEFAULT_OUTPUT_DEVICE_TAG，
- 解析连接的输入设备ATTACHED_INPUT_DEVICES_TAG，
- SPEAKER_DRC_ENABLED_TAG
}

//计算音量
AudioPolicyManagerBase::computeVolume{
- 
- volIndexToAmpl
}

hardware/rk29/audio/AudioPolicyManagerBase.cpp
