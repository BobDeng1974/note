//




================
AT命令：
at_open{
- 设置处理函数，s_unsolHandler
- 创建读线程，pthread_create(readerLoop)-->readerLoop{
	- 读取，readline
	- 是多行消息isSMSUnsolicited，再次读取readline，并处理s_unsolHandler
	- 处理，processLine
	}
}@atchannel.c
hardware/ril/reference-ril/atchannel.c



库：由个模块厂家实现
RIL_Init{
- 初始s_rilenv
- 从参数获取串口，s_device_path
- 创建线程，pthread_create( mainLoop)-->mainloop{
	- 打开串口ttyUSBx
	- 开启新线程，监听串口中消息，at_open
	- 回调RIL_requestTimedCallback(initializeCallback)-->s_rilEnv.RIL_requestTimedCallback
	}
}
hardware/ril/reference-ril/reference-ril.c



加载库：
service rild@init.c-->main{
- 查找对应的库，rilLibPath
- 解析参数   //-d AT服务的端口， -u 数据端口
- 打开库，dlopen
- 开始事件，RIL_startEventLoop
- 查找库中的函数rilInit，dlsym(dlHandle, "RIL_Init")
- 执行，rilInit-->RIL_Init
- 注册函数，RIL_register
}@rild.c
hardware/ril/rild/rild.c


接口：
hardware/ril/libril/ril.cpp
