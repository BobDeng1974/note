
ifconfig mlan0 up
iwlist mlan0 scan
iwconfig mlan0 essid FYT_Tek_Wifi2 key fyttek54321
iwconfig mlan0 essid FYT_Tek_Wifi2 key s:fyttek54321	
	
======================================
服务wifiService:
new WifiService(context)--ServiceManager.addService(Context.WIFI_SERVICE, wifi)
@SystemServer.java

获取服务：
getSystemService-->(映射表获得服务对应fetcher)fetcher.getService-->(缓存中没有)
ServiceFetcher.createService-->return new WifiManager(service, ctx.mMainThread.getHandler())
@ContextImpl.java
======================================
WifiService{
- 创建，WifiStateMachine
- mClientHandler
- mWifiStateMachineHandler
- mWifiController
}@WifiService.java


__________
启动过程打开wifi：
run-->wifi.checkAndStartWifi()@SystemServer.java-->checkAndStartWifi-->setWifiEnabled@WifiService.java

打开:
mWifiManager.setWifiEnabled(enable)@wifiEnabler.java-->mService.setWifiEnabled@WifiManager.java
-->setWifiEnabled-->mWifiController.sendMessage(CMD_WIFI_TOGGLED)
sendEnableMessage-->WifiHandler--setWifiEnabledBlocking-->mWifiStateTracker.loadDriver@WifiService.java
 

setWifiEnabledState@WifiService.java设置wifi状态并广播
__________
扫描：
startScan@wifiManager-->startScan@wifiService-->startScan@WifiStateMachine-->sendMessage
-->SmHandler.processMsg-->

卸载驱动：
unloadDriver@WifiStateTracker.java-->unloadDriver@android_net_wifi_wifi.cpp-->android_net_wifi_unloadDriver@android_net_wifi_wifi.cpp-->
wifi_unload_driver@wifi.c-->close_down_driver@wifi.c

在connectivityService中调用add_service加入WIFI_SERVICE
frameworks\base\services\java\com\android\server\connectivity\Tethering.java

启动start wpa_supplicant:
(setWifiEnabledBlocking || setWifiSwitchBlocking)@WifiService.java-->mWifiStateTracker.startSupplicant()@WifiStateTracker.java-->
WifiNative.startSupplicant()@android_net_wifi_wifi.cpp-->
wifi_start_supplicant@wifi.c-->property_set("ctl.start", SUPPLICANT_NAME)@wifi.c-->
property_set@property_service.c(在system/init中处理init.rc。init.c中循环处理property_set)-->handle_property_set_fd@property_service.c
-->handle_control_message@init.c-->(如果是开始服务操作)msg_start@init.c-->service_start-->notify_service_state-->(设置系统属性init.svc.%s)


BroadcastReceiver.onReceive()-->updateWifiState(send message)-->doUpdateWifiState-->sendEnableMessage-->setWifiEnabledBlocking@WifiService.java

supplicant没有连接track:
setWifiEnabledBlocking@WifiService.java-->startEventLoop-->startMonitoring@WifiStateTracker.java
-->MonitorThread.start-->MonitorThread.run-->notifySupplicantLost-->
sendEmptyMessage(EVENT_SUPPLICANT_DISCONNECT)

接上MonitorThread.run@WifiMonitor.java-->connectToSupplicant@WifiMonitor.java-->connectToSupplicant@WifiStateTracker.java-->
WifiNative.connectToSupplicant()

wpa_supplicant_add_iface-->wpa_supplicant_init_iface

start wifi PM deamon:
setWifiEnabledBlocking@WifiService.java-->startEventLoop@WifiStateTracker.java-->mWifiPMMonitor.startMonitoring()@WifiStateTracker.java-->
PMMonitorThread.run@WifiPMMonitro.java-->connectToPMDeamon-->mWifiStateTracker.connectToPMDeamon@WifiStateTracker.java-->
WifiNative.connectToPMDeamon@cpp-->wifi_start_pm_deamon@wifi.c

frameworks/base/services/java/com/android/server/WifiService.java
frameworks/base/wifi/java/android/net/wifi/WifiManager.java
frameworks/base/wifi/java/android/net/wifi/WifiStateTracker.java
frameworks/base/wifi/java/android/net/wifi/WifiStateMachine.java
frameworks/base/wifi/java/android/net/wifi/SupplicantStateTracker.java

usb:
hub_events@hub.c-->hub_port_connect_change@hub.c-->hub_port_debounce@hub.c

hub_port_connect_change@hub.c-->usb_disconnect@hub.c

hub_port_init@hub.c
____________________________________





packages/apps/Settings/src/com/android/settings/wifi/WifiEnabler.java
frameworks/base/services/java/com/android/server/WifiService.java
frameworks/base/wifi/java/android/net/wifi/WifiStateMachine.java

=============================
hardware:
加载驱动：
wifi_load_driver-->(查找驱动)get_wifi_device_num--(加载驱动模块)rel_load_driver@wifi.c
get_wifi_device_num-->find_existing_devices-->(设置驱动名)set_driver_property@wifi.c

开始wpa_supplicant:
setWifiEnabled-->sendMessage(CMD_START_SUPPLICANT)-->DriverLoadedState.processMessage
@WifiStateMachine.java-->startSupplicant@WifiNative.java-->android_net_wifi_startSupplicant
@android_net_wifi_Wifi.cpp-->wifi_start_supplicant-->property_set("ctl.start", supplicant_name)@wifi.c

监听：
DriverLoadedState.processMessage@WifiStateMachine.java-->startMonitoring-->MonitorThread.run
-->connectToSupplicant-->mWifiNative.connectToSupplicant@WifiMonitor.java-->
connectToSupplicant@WifiNative.java-->android_net_wifi_connectToSupplicant-->
wifi_connect_to_supplicant@android_net_wifi_Wifi.cpp-->wifi_connect_to_supplicant-->
wifi_connect_on_socket_path@wifi.c

frameworks/base/wifi/java/android/net/wifi/WifiNative.java
frameworks/base/core/jni/android_net_wifi_Wifi.cpp
frameworks/base/wifi/java/android/net/wifi/WifiMonitor.java
hardware/libhardware_legacy/wifi/wifi.c
________________________________________
固件加载：
固件地址："/etc/firmware","/vendor/firmware"
ueventd符号连接到init

ueventd@init.rc-->main@init.c-->ueventd_main@ueventd.c-->handle_device_fd-->handle_firmware_event-->process_firmware_event@devices.c


system/core/init/devices.c
system/core/init/ueventd.c
system/core/init/Android.mk

===============================
Tethering 继承接口 INetworkManagementEventObserver.Stub
stateReceiver-->updateUsbStatus-->enableUsbIfaces-->interfaceAdded@Tethering.java


===============================
reltek usb wifi：
通过vold发现wifi：
NetlinkHandler::onEvent-->vm->handleBlockEvent@NetlinkHandler.cpp-->wifiUsbVolume->handleBlockEvent
@VolumeManager.cpp-->mVm->getBroadcaster()->sendBroadcast@DirectVolume.cpp-->(接收到消息)
handleMessage-->mCallbacks.onEvent@NativeDaemonConnector.java-->sendBroadcast("findWifiUsb")@
MountService.java

接收广播：
BroadcastReceiver.onReceive-->setWifiEnabled(打开wifi)@WifiService.java


system/vold/NetlinkHandler.cpp
system/vold/VolumeManager.cpp
system/vold/DirectVolume.cpp
frameworks/base/services/java/com/android/server/NativeDaemonConnector.java
frameworks/base/services/java/com/android/server/MountService.java
frameworks/base/services/java/com/android/server/WifiService.java

